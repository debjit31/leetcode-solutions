/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> results = new ArrayList<>();
        findPathSum(root, sum, new ArrayList<Integer>(), results);
        return results;
     }
    public void findPathSum(TreeNode root, int sum, List<Integer> current, List<List<Integer>> results){
        if(root == null){
            return;
        }
        current.add(root.val);
        if(root.val == sum && root.left == null && root.right == null){
            results.add(current);
            return;
        }
        findPathSum(root.left, sum-root.val, new ArrayList<Integer>(current), results);
        findPathSum(root.right, sum-root.val, new ArrayList<Integer>(current), results);
    }
}